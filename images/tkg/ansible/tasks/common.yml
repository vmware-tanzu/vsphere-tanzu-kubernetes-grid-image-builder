# Copyright 2023 VMware, Inc.
# SPDX-License-Identifier: MPL-2.0
---
- name: Configure /etc/sysctl.d/80-bridged-net-traffic.conf
  copy:
    src: files/etc/sysctl.d/80-bridged-net-traffic.conf
    dest: /etc/sysctl.d/80-bridged-net-traffic.conf
    mode: 0644

- name: Create vmtoolsd.service.d
  file:
    path: /etc/systemd/system/vmtoolsd.service.d/
    state: directory
    mode: 0755

- name: Configure /etc/vmware-tools/tools.conf
  copy:
    src: files/etc/vmware-tools/tools.conf
    dest: /etc/vmware-tools/tools.conf
    mode: 0644

- name: Create autorestart.conf
  copy:
    src: files/etc/systemd/system/vmtoolsd.service.d/autorestart.conf
    dest: /etc/systemd/system/vmtoolsd.service.d/autorestart.conf
    mode: 0644

- name: Configure /usr/local/bin/kubeadm
  copy:
    src: files/usr/local/bin/kubeadm
    dest: /usr/local/bin/kubeadm
    mode: 0755

# TODO(KK) Investigate difference between upstream yaml and this
- name: Configure /etc/crictl.yaml
  copy:
    src: files/etc/crictl.yaml
    dest: /etc/crictl.yaml
    mode: 0644

- name: Replace containerd systemd file
  copy:
    src: etc/systemd/system/containerd.service
    dest: /etc/systemd/system/containerd.service
    mode: 0644

- name: Symlink docker.service to containerd.service
  file:
    src: "/etc/systemd/system/containerd.service"
    dest: "/usr/lib/systemd/system/docker.service"
    state: link

- name: Create audit log directory
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - "/var/log/kubernetes"
    - "/var/log/kubernetes/audit"

- name: Create /usr/lib/vmware-wcpgc-manifests directory
  file:
    path: /usr/lib/vmware-wcpgc-manifests/
    state: directory
    mode: 0644

- name: Add guest cluster artifacts
  get_url:
    url: "{{ item }}"
    dest: /usr/lib/vmware-wcpgc-manifests/
    mode: 0644
  ignore_errors: yes
  loop: "{{ gcAuthArtifacts.split(',') }}"
  retries: 5
  delay: 3

- name: Ensure /etc/kubernetes/manifests dir exists
  file:
    path: /etc/kubernetes/manifests
    state: directory

- name: Copy docker-registry static pod config yaml
  template:
    src: "etc/kubernetes/manifests/registry.yml"
    dest: "/etc/kubernetes/manifests/registry.yml"
    mode: 0644

- name: Copy containerd config.toml
  template:
    src: "etc/containerd/config_v2.toml"
    dest: "/etc/containerd/config.toml"
    mode: 0644

- name: Restart containerd service with custom config.toml
  systemd:
    name: containerd
    daemon_reload: yes
    enabled: True
    state: restarted

- name: Ensure localRegistry storage dir exists
  file:
    path: /storage/container-registry
    state: directory

# VM will be unable to reach github after the iptables rules are configured.
# Hence, goss binary is pre-downloaded to a new tmp space as /tmp get cleaned.
# /tmp/tmp.fstab is used as ansible cannot mount non-persistent mount point.
- name: Create /tkgs-tmp for goss
  mount:
    path: /tkgs-tmp
    src: "tmpfs"
    fstype: tmpfs
    state: mounted
    fstab: /tmp/tmp.fstab

- name: Download goss binary
  get_url:
    url: "https://github.com/aelsabbahy/goss/releases/download/v0.3.16/goss-linux-amd64"
    dest: /tkgs-tmp/goss-linux-amd64
    mode: 0755
  retries: 5
  delay: 3

- name: Disable kubelet and containerd service
  systemd:
    name: "{{ item }}"
    enabled: no
  loop:
    - "containerd"

- name: Remove cloud-init boot-order conf files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/etc/systemd/system/cloud-config.service.d/boot-order.conf"
    - "/etc/systemd/system/cloud-final.service.d/boot-order.conf"

  # TODO: Consume caymanized imgpkg rather than open source GCM-6191
- name: Download carvel install.sh
  get_url:
    url: https://carvel.dev/install.sh
    dest: /tmp/install.sh
    mode: '0777'

- name: Create a directory for carvel tools if it does not exist
  ansible.builtin.file:
    path: "{{ carvel_tools }}"
    state: directory
    mode: '0755'

- name: Install wget for Carvel tools Installation
  command: tdnf install wget -y
  when: ansible_os_family == "VMware Photon OS"

- name: Set up carvel tools inside OVA
  ansible.builtin.shell: K14SIO_INSTALL_BIN_DIR={{ carvel_tools }} /tmp/install.sh
  args:
    executable: /bin/bash
